{"version":3,"sources":["api/assets.js","api/game.js","contexts/APIContext.jsx","components/SpellTimer/index.js","components/SpellTimer/SpellTimer.jsx","util/teleport.js","components/Level/index.js","components/Level/Level.jsx","components/Champion/index.js","components/Champion/Champion.jsx","components/SummonerDetail/index.js","components/SummonerDetail/SummonerDetail.jsx","App.js","serviceWorker.js","index.js"],"names":["fetchAPIVersion","a","fetch","then","res","json","versions","fetchAllChampions","versionInput","version","data","fetchSummonerSpells","url","process","APIContext","createContext","APIContextProvider","children","useState","setVersion","champions","setChampions","spells","setSpells","summonerId","setSummonerId","players","setPlayers","inputError","setInputError","levels","setLevels","useEffect","map","Object","values","champion","key","spell","fetchData","_","isEmpty","fetchLiveGame","participants","status","get","friendlyTeamId","find","participant","teamId","filter","Provider","value","getLevel","index","setLevel","level","newLevels","clone","SpellTimer","id","useContext","isActivated","setActivated","timer","setTimer","cooldown","isTeleport","urlPrefix","resetTimer","useCallback","interval","setInterval","clearInterval","className","src","image","full","alt","max","class","round","onClick","Level","Champion","summonerInfo","championId","spell1Id","spell2Id","name","summonerName","SummonerDetail","setSummonerName","isSearched","setIsSearched","summonerDetail","setSummonerDetail","searchBox","style","justifyContent","type","placeholder","onChange","event","target","profileIconId","summonerLevel","App","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"4NAAeA,I,2EAAf,4BAAAC,EAAA,sEACyBC,MAAM,yDAC1BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAFrB,cACQC,EADR,yBAGSA,EAAS,IAHlB,4C,+BAaeC,E,8EAAf,WAAiCC,GAAjC,eAAAP,EAAA,0DACkBO,EADlB,qBACiCA,EADjC,sCACsDR,IADtD,iCACQS,EADR,eAEeP,MAAM,2CAAD,OAA4CO,EAA5C,8BACfN,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAIA,EAAKK,QAJvB,sF,+BAOeC,E,8EAAf,WAAmCH,GAAnC,eAAAP,EAAA,0DACkBO,EADlB,qBACiCA,EADjC,sCACsDR,IADtD,iCACQS,EADR,eAEeP,MAAM,2CAAD,OAA4CO,EAA5C,8BACfN,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAIA,EAAKK,QAJvB,sF,sBCpBA,IAAME,EAAMC,8DCaZ,IAAMC,EAAaC,0BAEnB,SAASC,EAAT,GAA2C,IAAbC,EAAY,EAAZA,SAAY,EACVC,mBAAS,IADC,mBACjCT,EADiC,KACxBU,EADwB,OAEND,mBAAS,IAFH,mBAEjCE,EAFiC,KAEtBC,EAFsB,OAGZH,mBAAS,IAHG,mBAGjCI,EAHiC,KAGzBC,EAHyB,OAIJL,mBAAS,IAJL,mBAIjCM,EAJiC,KAIrBC,EAJqB,OAKVP,mBAAS,IALC,mBAKjCQ,EALiC,KAKxBC,EALwB,OAMJT,mBAAS,MANL,mBAMjCU,EANiC,KAMrBC,EANqB,OAOZX,mBAAS,CAAC,EAAG,EAAG,EAAG,EAAG,IAPV,mBAOjCY,EAPiC,KAOzBC,EAPyB,KASxCC,qBAAU,YACO,uCAAG,sBAAA/B,EAAA,sDAChBD,IAAkBG,MAAK,SAACC,GACtBe,EAAWf,GACXG,EAAkBH,GAAKD,MAAK,SAAAO,GAE1B,IADA,IAAMuB,EAAM,GACZ,MAAqBC,OAAOC,OAAOzB,GAAnC,eAA0C,CAArC,IAAI0B,EAAQ,KAEfH,EADgBG,EAARC,KACGD,EAEbf,EAAaY,MAEftB,EAAoBP,GAAKD,MAAK,SAAAO,GAE5B,IADA,IAAMuB,EAAM,GACZ,MAAkBC,OAAOC,OAAOzB,GAAhC,eAAuC,CAAlC,IAAI4B,EAAK,KAEZL,EADgBK,EAARD,KACGC,EAEbf,EAAUU,SAjBE,2CAAH,qDAqBfM,KACC,IAEHP,qBAAU,WACHQ,IAAEC,QAAQjB,ID3CnB,SAAuBA,GACrB,OAAOtB,MAAM,GAAD,OAAIU,EAAJ,4BAA2BY,IACpCrB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UC0CfqC,CAAclB,GAAYrB,MAAK,SAAAC,GAAQ,IAC7BuC,EAAyBvC,EAAzBuC,aAAcC,EAAWxC,EAAXwC,OACtB,GAAIJ,IAAEK,IAAID,EAAQ,eAEhB,OADAf,EAAcW,IAAEK,IAAID,EAAQ,YACrB,GAETf,EAAc,MACd,IAAMiB,EAAiBH,EAAaI,MAAK,SAAAC,GAAW,OAAIA,EAAYxB,aAAeA,KAAYyB,OAC/F,OAAON,EAAaO,QAAO,SAAAF,GAAW,OAAIA,EAAYC,SAAWH,QAChE3C,MAAK,SAAAwC,GAAY,OAAIhB,EAAWgB,QAEpC,CAACnB,IASJ,OACE,kBAACV,EAAWqC,SAAZ,CAAqBC,MAAO,CAC1B3C,UAASW,YAAWE,SAAQG,gBAAeC,UAASE,aAAYyB,SATnD,SAACC,GAAD,OAAWxB,EAAOwB,IAS2CC,SAR7D,SAACD,EAAOE,GACvB,IAAMC,EAAYjB,IAAEkB,MAAM5B,GAC1B2B,EAAUH,GAASE,EACnBzB,EAAU0B,MAOPxC,GCzEQ0C,MCKA,YAAoC,IAAdC,EAAa,EAAbA,GAAIN,EAAS,EAATA,MAAS,EACVO,qBAAW/C,GAAzCL,EADwC,EACxCA,QAASa,EAD+B,EAC/BA,OAAQ+B,EADuB,EACvBA,SADuB,EAEZnC,oBAAS,GAFG,mBAEzC4C,EAFyC,KAE5BC,EAF4B,OAGtB7C,oBAAU,GAHY,mBAGzC8C,EAHyC,KAGlCC,EAHkC,KAK1C3B,EAAQhB,EAAOsC,GACfM,ECXR,SAAoB5B,GAClB,MAAoC,aAA7BE,IAAEK,IAAIP,EAAO,OAAQ,IDUX6B,CAAW7B,GCNP,QACE,ODKwCe,EAASC,GAAUd,IAAEK,IAAIP,EAAO,CAAC,WAAY,IAEtG8B,EAAS,kDAA8C3D,EAA9C,QAET4D,EAAaC,uBAAY,WAC7BL,EAASC,GACTH,GAAa,KACZ,CAACG,IAwBJ,OAtBAlC,qBAAU,WACRiC,EAASC,KACR,CAACA,IAEJlC,qBAAU,WACR,GAAI8B,GAAeE,EAAQ,EAAG,CAC5B,IAAMO,EAAWC,aAAY,kBAAMP,EAASD,EAAQ,KAAI,KACxD,OAAO,WACLS,cAAcF,IAEG,IAAVP,GACTK,MAED,CAACP,EAAaE,EAAOK,IASnB/B,EAKH,yBAAKoC,UAAU,SACb,4BAAQA,UAAU,uBAChB,yBACEA,UAAU,aACVC,IAAG,UAAKP,EAAL,kBAAwB9B,EAAMsC,MAAMC,MACvCC,IAAI,mBAGR,yBAAKJ,UAAU,cACb,8BAAUA,UAAU,WAAWK,IAAKb,EAAUd,MAAOY,KAEvD,0BAAMgB,MAAM,YACTxC,IAAEyC,MAAMjB,IAEX,4BAAQU,UAAU,uBAAuBQ,QA1BzB,WACdpB,GACFG,EAASC,GAEXH,GAAcD,KAuBTA,EAAc,OAAS,UAnBrB,8BAAUY,UAAU,cE3ChBS,MCEA,YAA2B,IAAV7B,EAAS,EAATA,MAAS,EACRO,qBAAW/C,GAAlCuC,EAD+B,EAC/BA,SAAUE,EADqB,EACrBA,SAEZC,EAAQH,EAASC,GAkBvB,OACE,yBAAK0B,MAAM,oBACT,uBAAGA,MAAM,WACP,4BAAQA,MAAM,SAASE,QAnBP,WAChB1B,EAAQ,GACVD,EAASD,EAAOE,EAAQ,KAkBpB,qCAGJ,uBAAGwB,MAAM,WACP,4BAAQA,MAAM,SAASE,QAZV,WACjB3B,EAASD,EAAO,KAYV,8BAAOE,KAGX,uBAAGwB,MAAM,WACP,4BAAQA,MAAM,SAASE,QAvBP,WAChB1B,EAAQ,IACVD,EAASD,EAAOE,EAAQ,KAsBpB,uCCrCK4B,MCMA,YAA8B,IAAV9B,EAAS,EAATA,MAAS,EACFO,qBAAW/C,GAA3CY,EADkC,EAClCA,QAASN,EADyB,EACzBA,UAAWX,EADc,EACdA,QAEtB2D,EAAS,kDAA8C3D,EAA9C,QAEf,GAAI+B,IAAEC,QAAQf,IAAYc,IAAEC,QAAQrB,IAAcoB,IAAEC,QAAQhC,GAC1D,OAAO,KAGT,IAAM4E,EAAe3D,EAAQ4B,GACvBlB,EAAWhB,EAAUiE,EAAaC,YAChCC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,SAElB,OACE,yBAAKd,UAAU,oBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAG,UAAKP,EAAL,qBAA2BhC,EAASwB,GAApC,QACHkB,IAAI,mBAGR,yBAAKJ,UAAU,cACb,wBAAIA,UAAU,SAAStC,EAASqD,MAChC,wBAAIf,UAAU,iBAAiBW,EAAaK,gBAGhD,yBAAKhB,UAAU,eACb,kBAAC,EAAD,CAAOpB,MAAOA,MAGlB,kBAAC,EAAD,CAAYM,GAAI2B,EAAUjC,MAAOA,IACjC,kBAAC,EAAD,CAAYM,GAAI4B,EAAUlC,MAAOA,MCvCxBqC,MCIA,WAA2B,IAAD,EACD9B,qBAAW/C,GAAzCW,EAD+B,EAC/BA,cAAeG,EADgB,EAChBA,WADgB,EAECV,mBAAS,IAFV,mBAEhCwE,EAFgC,KAElBE,EAFkB,OAGH1E,oBAAS,GAHN,mBAGhC2E,EAHgC,KAGpBC,EAHoB,OAIK5E,mBAAS,IAJd,mBAIhC6E,EAJgC,KAIhBC,EAJgB,KAqBjCC,EACJ,yBAAKvB,UAAU,4CAA4CwB,MAAOL,EAAa,GAAK,CAAEM,eAAgB,WACpG,yBAAKzB,UAAU,WACb,2BAAOA,UAAU,iBAAiB0B,KAAK,OAAOC,YAAY,gBAAgBjD,MAAOsC,EAAcY,SAlB1E,SAACC,GAC1BX,EAAgBW,EAAMC,OAAOpD,WAmB3B,yBAAKsB,UAAU,WACb,4BAAQA,UAAU,kBAAkBQ,QAjBnB,WVdzB,IAA2BO,EUelBjD,IAAEC,QAAQiD,KVfQD,EUgBHC,EVffxF,MAAM,GAAD,OAAIU,EAAJ,kCAAiC6E,IAC1CtF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WUciBF,MAAK,SAAAC,GAAQ,IACnCwD,EAAOxD,EAAPwD,GACRoC,EAAkB5F,GAClBqB,EAAcmC,GACdkC,GAAc,QAWd,YAON,OAAKD,EASH,yBAAKnB,UAAU,oBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEA,UAAU,aACVC,IAAG,0EAAqEoB,EAAeU,cAApF,QACH3B,IAAI,sBAGR,yBAAKJ,UAAU,cACb,wBAAIA,UAAU,cAAcqB,EAAeN,MAC3C,0BAAMf,UAAU,YAAYqB,EAAeW,iBAG/C,yBAAKhC,UAAU,eACZuB,IAIHrE,EACE,uBAAG8C,UAAU,kBAAkB9C,GAC/B,MA7BJ,yBAAK8C,UAAU,oBACXuB,IChBKU,MArBf,WACE,OACE,kBAAC3F,EAAD,KACE,8BACE,yBAAK0D,UAAU,wBACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUpB,MAAO,IACjB,kBAAC,EAAD,CAAUA,MAAO,KAEnB,yBAAKoB,UAAU,UACb,kBAAC,EAAD,CAAUpB,MAAO,IACjB,kBAAC,EAAD,CAAUA,MAAO,IACjB,kBAAC,EAAD,CAAUA,MAAO,SCPTsD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrH,MAAK,SAAAsH,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.f7855ec7.chunk.js","sourcesContent":["async function fetchAPIVersion() {\n  const versions = await fetch('https://ddragon.leagueoflegends.com/api/versions.json')\n    .then(res => res.json());\n  return versions[0];\n}\n\nasync function fetchChampion(id) {\n  const version = await fetchAPIVersion();\n  const response = await fetch(`https://ddragon.leagueoflegends.com/cdn/${version}/data/en_US/champion/${id}.json`)\n    .then(res => res.json());\n  return response.data[id];\n}\n\nasync function fetchAllChampions(versionInput) {\n  const version = versionInput ? versionInput : await fetchAPIVersion();\n  return await fetch(`https://ddragon.leagueoflegends.com/cdn/${version}/data/en_US/champion.json`)\n    .then(res => res.json())\n    .then(json => json.data);\n}\n\nasync function fetchSummonerSpells(versionInput) {\n  const version = versionInput ? versionInput : await fetchAPIVersion();\n  return await fetch(`https://ddragon.leagueoflegends.com/cdn/${version}/data/en_US/summoner.json`)\n    .then(res => res.json())\n    .then(json => json.data);\n}\n\nexport {\n  fetchAPIVersion,\n  fetchChampion,\n  fetchAllChampions,\n  fetchSummonerSpells\n}","const url = process.env.REACT_APP_PROXY_URL;\n\nfunction fetchSummonerInfo(name) {\n  return fetch(`${url}/summoner?summonerName=${name}`)\n    .then(res => res.json());\n}\n\nfunction fetchLiveGame(summonerId) {\n  return fetch(`${url}/live?summonerId=${summonerId}`)\n    .then(res => res.json());\n}\n\nexport {\n  fetchSummonerInfo,\n  fetchLiveGame\n}","import React, { createContext, useEffect, useState } from 'react';\nimport _ from 'lodash';\n\nimport {\n  fetchAPIVersion,\n  fetchAllChampions,\n  fetchSummonerSpells\n} from '../api/assets';\n\nimport {\n  fetchLiveGame\n} from '../api/game';\n\nconst APIContext = createContext();\n\nfunction APIContextProvider({ children }) {\n  const [version, setVersion] = useState('');\n  const [champions, setChampions] = useState({});\n  const [spells, setSpells] = useState({});\n  const [summonerId, setSummonerId] = useState('');\n  const [players, setPlayers] = useState([]);\n  const [inputError, setInputError] = useState(null);\n  const [levels, setLevels] = useState([1, 1, 1, 1, 1]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      fetchAPIVersion().then((res) => {\n        setVersion(res);\n        fetchAllChampions(res).then(data => {\n          const map = {};\n          for (let champion of Object.values(data)) {\n            const { key } = champion;\n            map[key] = champion;\n          };\n          setChampions(map);\n        });\n        fetchSummonerSpells(res).then(data => {\n          const map = {};\n          for (let spell of Object.values(data)) {\n            const { key } = spell;\n            map[key] = spell;\n          }\n          setSpells(map);\n        });\n      });\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (!_.isEmpty(summonerId)) {\n      fetchLiveGame(summonerId).then(res => {\n        const { participants, status } = res;\n        if (_.get(status, 'status_code')) {\n          setInputError(_.get(status, 'message'));\n          return [];\n        }\n        setInputError(null);\n        const friendlyTeamId = participants.find(participant => participant.summonerId === summonerId).teamId;\n        return participants.filter(participant => participant.teamId !== friendlyTeamId);\n      }).then(participants => setPlayers(participants));\n    }\n  }, [summonerId]);\n\n  const getLevel = (index) => levels[index];\n  const setLevel = (index, level) => {\n    const newLevels = _.clone(levels);\n    newLevels[index] = level;\n    setLevels(newLevels);\n  }\n\n  return (\n    <APIContext.Provider value={{\n      version, champions, spells, setSummonerId, players, inputError, getLevel, setLevel\n    }}>\n      {children}\n    </APIContext.Provider>\n  );\n}\n\nexport {\n  APIContext,\n  APIContextProvider\n}","import SpellTimer from './SpellTimer';\n\nexport default SpellTimer;","import React, { useContext, useEffect, useState, useCallback } from 'react';\nimport _ from 'lodash';\n\nimport { APIContext } from '../../contexts/APIContext';\n\nimport { isTeleport, calculateTeleportCooldown } from '../../util/teleport';\n\nexport default function SpellTimer({ id, index }) {\n  const { version, spells, getLevel } = useContext(APIContext);\n  const [isActivated, setActivated] = useState(false);\n  const [timer, setTimer] = useState(-1);\n\n  const spell = spells[id];\n  const cooldown = isTeleport(spell) ? calculateTeleportCooldown(getLevel(index)) : _.get(spell, ['cooldown', 0]);\n\n  const urlPrefix = `https://ddragon.leagueoflegends.com/cdn/${version}/img`;\n  \n  const resetTimer = useCallback(() => {\n    setTimer(cooldown);\n    setActivated(false);\n  }, [cooldown]);\n\n  useEffect(() => {\n    setTimer(cooldown);\n  }, [cooldown])\n  \n  useEffect(() => {\n    if (isActivated && timer > 0) {\n      const interval = setInterval(() => setTimer(timer - 1), 1000);\n      return () => {\n        clearInterval(interval);\n      }\n    } else if (timer === 0) {\n      resetTimer();\n    }\n  }, [isActivated, timer, resetTimer]);\n\n  const handleClick = () => {\n    if (isActivated) {\n      setTimer(cooldown);\n    }\n    setActivated(!isActivated);\n  }\n  \n  if (!spell) {\n    return <progress className=\"progress\" />\n  }\n\n  return (\n    <div className=\"level\">\n      <figure className=\"image is-24x24 mr-2\">\n        <img\n          className=\"is-rounded\"\n          src={`${urlPrefix}/spell/${spell.image.full}`}\n          alt=\"Champion Icon\"\n        />\n      </figure>\n      <div className=\"level-item\">\n        <progress className=\"progress\" max={cooldown} value={timer} />\n      </div>\n      <span class=\"tag ml-2\">\n        {_.round(timer)}\n      </span>\n      <button className=\"button is-small ml-2\" onClick={handleClick}>\n        {isActivated ? \"Stop\" : \"Start\"}\n      </button>\n    </div>\n  )\n}","import _ from 'lodash';\n\nfunction isTeleport(spell) {\n  return _.get(spell, 'name', '') === 'Teleport';\n}\n\nfunction calculateTeleportCooldown(level) {\n  const baseCooldown = 430.588;\n  const perLevelChange = 10.588;\n  return baseCooldown - level * perLevelChange;\n}\n\nexport {\n  isTeleport,\n  calculateTeleportCooldown\n}","import Level from './Level';\n\nexport default Level;","import React, { useContext } from 'react';\n\nimport { APIContext } from '../../contexts/APIContext';\n\nexport default function Level({ index }) {\n  const { getLevel, setLevel } = useContext(APIContext);\n\n  const level = getLevel(index);\n\n  const decreaseLevel = () => {\n    if (level > 1) {\n      setLevel(index, level - 1);\n    }\n  }\n\n  const increaseLevel = () => {\n    if (level < 18) {\n      setLevel(index, level + 1);\n    }\n  }\n\n  const resetLevel = () => {\n    setLevel(index, 1);\n  }\n\n  return (\n    <div class=\"field has-addons\">\n      <p class=\"control\">\n        <button class=\"button\" onClick={decreaseLevel}>\n          <span>-</span>\n        </button>\n      </p>\n      <p class=\"control\">\n        <button class=\"button\" onClick={resetLevel} >\n          <span>{level}</span>\n        </button>\n      </p>\n      <p class=\"control\">\n        <button class=\"button\" onClick={increaseLevel}>\n          <span>+</span>\n        </button>\n      </p>\n    </div>\n  );\n}","import Champion from './Champion';\n\nexport default Champion;","import React, { useContext } from 'react';\nimport _ from 'lodash';\n\nimport { APIContext } from '../../contexts/APIContext';\n\nimport SpellTimer from '../SpellTimer';\nimport Level from '../Level';\n\nexport default function Champion({ index }) {\n  const { players, champions, version } = useContext(APIContext);\n  \n  const urlPrefix = `https://ddragon.leagueoflegends.com/cdn/${version}/img`;\n\n  if (_.isEmpty(players) || _.isEmpty(champions) || _.isEmpty(version)) {\n    return null;\n  }\n  \n  const summonerInfo = players[index];\n  const champion = champions[summonerInfo.championId];\n  const { spell1Id, spell2Id } = summonerInfo;\n\n  return (\n    <div className=\"box champion-box\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <figure className=\"image is-96x96\">\n            <img\n              src={`${urlPrefix}/champion/${champion.id}.png`}\n              alt=\"Champion Icon\"\n            />\n          </figure>\n          <div className=\"title ml-4\">\n            <h1 className=\"title\">{champion.name}</h1>\n            <h2 className=\"subtitle is-6\">{summonerInfo.summonerName}</h2>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <Level index={index} />\n        </div>\n      </div>\n      <SpellTimer id={spell1Id} index={index} />\n      <SpellTimer id={spell2Id} index={index} />\n    </div>\n  )\n}","import SummonerDetail from './SummonerDetail';\n\nexport default SummonerDetail;","import React, { useState, useContext } from 'react';\nimport _ from 'lodash';\n\nimport { APIContext } from '../../contexts/APIContext';\nimport { fetchSummonerInfo } from '../../api/game';\n\nexport default function SummonerDetail() {\n  const { setSummonerId, inputError } = useContext(APIContext);\n  const [summonerName, setSummonerName] = useState('');\n  const [isSearched, setIsSearched] = useState(false);\n  const [summonerDetail, setSummonerDetail] = useState({});\n\n  const changeSummonerName = (event) => {\n    setSummonerName(event.target.value);\n  }\n\n  const searchSummoner = () => {\n    if (!_.isEmpty(summonerName)) {\n      fetchSummonerInfo(summonerName).then(res => {\n        const { id } = res;\n        setSummonerDetail(res);\n        setSummonerId(id);\n        setIsSearched(true);\n      });\n    }\n  }\n\n  const searchBox = (\n    <div className=\"field has-addons u-justify-content-center\" style={isSearched ? {} : { justifyContent: 'center' }}>\n      <div className=\"control\">\n        <input className=\"input is-small\" type=\"text\" placeholder=\"Summoner Name\" value={summonerName} onChange={changeSummonerName} />\n      </div>\n      <div className=\"control\">\n        <button className=\"button is-small\" onClick={searchSummoner}>\n          Search\n        </button>\n      </div>\n    </div>\n  );\n\n  if (!isSearched) {\n    return (\n      <div className=\"box champion-box\">\n        { searchBox }\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"box champion-box\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <figure className=\"image is-96x96\">\n            <img\n              className=\"is-rounded\"\n              src={`https://ddragon.leagueoflegends.com/cdn/10.12.1/img/profileicon/${summonerDetail.profileIconId}.png`}\n              alt=\"Summoner Profile\"\n            />\n          </figure>\n          <div className=\"level-item\">\n            <h1 className=\"title ml-4\">{summonerDetail.name}</h1>\n            <span className=\"tag ml-2\">{summonerDetail.summonerLevel}</span>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          {searchBox}\n        </div>\n      </div>\n      {\n        inputError ? \n          <p className=\"help is-danger\">{inputError}</p>\n        : null\n      }\n    </div>\n  );\n}","import React from 'react';\n\nimport Champion from './components/Champion';\nimport SummonerDetail from './components/SummonerDetail';\nimport { APIContextProvider } from './contexts/APIContext';\n\nfunction App() {\n  return (\n    <APIContextProvider>\n      <main>\n        <div className=\"columns is-vcentered\">\n          <div className=\"column\">\n            <SummonerDetail />\n            <Champion index={0} />\n            <Champion index={1} />\n          </div>\n          <div className=\"column\">\n            <Champion index={2} />\n            <Champion index={3} />\n            <Champion index={4} />\n          </div>\n        </div>\n      </main>\n    </APIContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './sass/styles.scss';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}